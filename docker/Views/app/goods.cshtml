<link href="/ueditor/themes/default/css/umeditor.min.css" rel="stylesheet" />
<style>
    .el-table__row td{padding:3px 0;}.tc input{text-align:center;}
    .el-upload--picture-card{line-height:inherit;width:8em;}
    .el-upload-list{display:table-cell;}
</style>
<div id="app" class="wln"><router-view></router-view></div>
<template id="app-list">
    <div>
        <div class="wln-title">
            <div style="float:right">
                <el-button size="mini" type="info" :plain="true" @@click="refresh()">刷新</el-button>
                <el-button size="mini" icon="el-icon-plus" type="primary" onclick="router.push(vpath + '/add')" v-if="editor">新增商品</el-button>
            </div>
            商品管理
        </div>
        <el-table :data="rows" :empty-text="message">
            <el-table-column width="50" align="center" label="权重" property="weight"></el-table-column>
            <el-table-column width="90" align="center" label="缩略图">
                <template scope="scope">
                    <img v-bind:src="scope.row.image + '!b90'" style="width:50px;height:50px;" />
                </template>
            </el-table-column>
            <el-table-column label="商品">
                <template scope="scope">
                    <p><b>{{scope.row.name}}</b></p>
                    <p>分组：<font style="display:inline-block;width:200px;">{{scope.row.tags}}</font>品牌：{{scope.row.brand}}</p>
                </template>
            </el-table-column>
            <el-table-column width="200" align="left" label="编号">
                <template scope="scope">
                    <p>商品条码：{{scope.row.barcode}}</p>
                    <p>自制编号：{{scope.row.customno}}</p>
                </template>
            </el-table-column>
            <el-table-column width="70" align="center" label="状态">
                <template scope="scope">
                    <font style="color:#67C23A;" v-if="scope.row.state===1">正常</font>
                    <font style="color:#E6A23C;" v-if="scope.row.state===2">推荐</font>
                    <font style="color:#999999;" v-else>停用</font>
                </template>
            </el-table-column>
            <el-table-column width="180" align="center" label="操作" v-if="editor">
                <template scope="scope">
                    <el-button size="mini" icon="el-icon-edit" type="warning" @@click="handleEditer(scope.row)">编辑</el-button>
                    <el-button size="mini" icon="el-icon-delete" type="danger" @@click="handleDelete(scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <el-pagination @@size-change="sizeChange" @@current-change="currentChange" layout="total, sizes, prev, pager, next, jumper" :current-page="index" :page-size="size" :total="total"></el-pagination>
    </div>
</template>
<template id="app-form">
    <div>
        <div class="wln-title">
            商品信息 <a onclick="history.back()">返回</a>
        </div>
        <el-tabs tab-position="left" style="height:600px;">
            <el-tab-pane label="基础信息">
                <el-form ref="form" v-model="form" label-width="140px">
                    <el-form-item label="商品名称">
                        <el-input v-model="form.name" placeholder="商品名称" style="width:360px"></el-input>
                        <el-input v-model="form.price" placeholder="参考价格" class="tc" style="width:120px"></el-input>
                        <span class="tips notnull"></span>
                    </el-form-item>
                    <el-form-item label="商品分类">
                        <el-select v-model="form.tags" multiple placeholder="所属分组" style="width:360px">
                            <el-option v-for="item in tags" :key="item" :label="item" :value="item"></el-option>
                        </el-select>
                        <el-input v-model="form.brand" placeholder="所属品牌" class="tc" style="width:120px"></el-input>
                    </el-form-item>
                    <el-form-item label="商品编号">
                        <el-input v-model="form.customno" placeholder="自制编号" style="width:240px"></el-input>
                        <el-input v-model="form.barcode" placeholder="标准条码" style="width:240px"></el-input>
                    </el-form-item>
                    <el-form-item label="缩略图">
                        <el-upload auto-upload="accept" acct="image/*" action="/rest/upload" :show-file-list="false" :on-success="handleUploadSuccess">
                            <img v-if="form.image" :src="form.image + '!b90'" /><i v-else class="el-icon-upload"></i>
                        </el-upload>
                    </el-form-item>
                    <el-form-item label="轮播图">
                        <div v-for="item in form.images" class="el-upload el-upload--picture-card el-upload-list">
                            <img :src="item + '!w4h3m'" />
                        </div>
                        <el-upload auto-upload="accept" class="el-upload-list" acct="image/*" action="/rest/upload" :show-file-list="false" list-type="picture-card" :on-success="handleUploadListSuccess">
                            <i class="el-icon-upload"></i>
                        </el-upload>
                    </el-form-item>
                    <el-form-item label="商品状态">
                        <el-select v-model="form.state" placeholder="请选择" class="tc" style="width:88px">
                            <el-option v-for="item in status" :key="item.value" :label="item.label" :value="item.value"></el-option>
                        </el-select>
                        <el-tooltip content="权重数值越大越靠前" placement="bottom">
                            <el-input v-model="form.weight" placeholder="权重" class="tc" style="width:60px"></el-input>
                        </el-tooltip>
                        <el-tooltip content="虚拟销量，与实际销量相加后显示" placement="bottom">
                            <el-input v-model="form.hot" placeholder="热度" class="tc" style="width:60px"></el-input>
                        </el-tooltip>
                    </el-form-item>
                </el-form>
            </el-tab-pane>
            <el-tab-pane label="图文详情">
                <div style="display:table">
                    <div style="width:600px;display:table-cell;vertical-align:top;">
                    <script type="text/plain" id="editor_goods" style="width:560px;line-height:1.6em">
                    </script></div>
                    <div style="width:10px;display:table-cell;"></div>
                    <div style="width:360px;display:table-cell;vertical-align:top;">
                        <div style="width:360px;border:1px solid #C91523;height:580px;">
                            <h1 style="background:#C91523;text-align:center;line-height:3.5rem;font-size:1.7rem;color:#ffffff;">内容预览</h1>
                            <div id="preview" style="overflow-x:hidden;overflow-y:auto;line-height:1.6em;font-family:sans-serif;"></div>
                        </div>
                    </div>
                </div>
            </el-tab-pane>
        </el-tabs>
        <div class="wln-line"></div>
        <div style="width:960px;text-align:center;text-indent:220px;padding-bottom:60px">
            <el-button icon="el-icon-check" type="primary" @@click="onSubmit">提交</el-button>
            <el-button icon="el-icon-close" onclick="history.back()">取消</el-button>
        </div>
    </div>
</template>
<script type="text/javascript" src="/ueditor/umeditor.config.js"></script>
<script type="text/javascript" src="/ueditor/umeditor.min.js"></script>
<script type="text/javascript" src="/ueditor/lang/zh-cn/zh-cn.js"></script>
<script type="text/javascript">
    var vpath = "/goods";
    var tags = [];
    $.ajax({
        url: '/rest/group', dataType: "json", async: false, success: function (data) {
            tags = data;
        }
    });
    var editor;
    var appList = Vue.extend({
        template: '#app-list',
        data: function () {
            emptyPager.organs = [];
            emptyPager.editor = false;
            $.getJSON('/auth', { code: 'Weshop_Goods_Editor' }, function (rlt) {
                emptyPager.editor = rlt.success;
            })
            return emptyPager
        },
        methods: {
            refresh() {
                var _self = this;
                if (new Date().getTime() - ts > 10000) {
                    ts = new Date().getTime();
                    $.getJSON(location.pathname, { 'do': 'pager', page: _self.index, size: _self.size }, function (rlt) {
                        ts = 0;
                        _self.message = rlt.message;
                        _self.total = rlt.total;
                        _self.index = rlt.index;
                        _self.rows = rlt.rows;
                    });
                }
            },
            search(event) {
                if (event.keyCode == 13) {
                    this.refresh()
                }
            },
            sizeChange(val) {
                emptyPager.size = val;
                this.refresh();
            },
            currentChange(val) {
                emptyPager.index = val;
                this.refresh();
            },
            handleEditer(row) {
                router.push(vpath + '/edit?id=' + row.id);
            },
            handleState(row) {
                if (new Date().getTime() - ts < 10000) {
                    return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
                }
                else {
                    ts = new Date().getTime();
                }
                var _self = this;
                $.getJSON(location.pathname, { 'do': 'state', id: row.id }, function (rlt) {
                    ts = 0;
                    _self.refresh();
                    iTips(rlt.message, rlt.success);
                });
            },
            handleDelete(row) {
                this.$confirm('此操作将删除该记录, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    var _self = this;
                    if (new Date().getTime() - ts < 10000) {
                        return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
                    }
                    else {
                        ts = new Date().getTime();
                    }
                    $.getJSON(location.pathname, { 'do': 'del', id: row.id }, function (rlt) {
                        ts = 0;
                        _self.refresh();
                        iTips(rlt.message, rlt.success);
                    });
                }).catch(() => {
                    iTips('删除操作已取消');
                });
            }
        }, created() {
            this.refresh();
        }
    })
    var appForm = Vue.extend({
        template: '#app-form',
        data: function () {
            var obj = {
                form: {
                    id: ''
                    ,
                    name: ''
                    ,
                    price: ''
                    ,
                    tags: []
                    ,
                    brand: ''
                    ,
                    barcode: ''
                    ,
                    customno: ''
                    ,
                    category: ''
                    ,
                    image: ''
                    ,
                    images: []
                    ,
                    content: ''
                    ,
                    weight: ''
                    ,
                    hot: ''
                    ,
                    state: 1
                },
                tags: tags,
                status: [{ "value": 1, "label": "正常" }, { "value": 2, "label": "推荐" }, { "value": 0, "label": "停用" }],
            }
            return obj;
        },
        methods: {
            handleUploadSuccess(rlt) {
                if (rlt.success) {
                    this.form.image = rlt.url;
                } else {
                    return app.$message({ type: 'info', message: rlt.message });
                }
            },
            handleUploadListSuccess(rlt) {
                if (rlt.success) {
                    this.form.images.push(rlt.url);
                } else {
                    return app.$message({ type: 'info', message: rlt.message });
                }
            },
            onSubmit: function () {
                var obj = this.form;
                obj.content = editor.getContent();
                var tmp = {
                    id: obj.id
                    ,
                    name: obj.name
                    ,
                    price: obj.price
                    ,
                    brand: obj.brand
                    ,
                    image: obj.image
                    ,
                    images: obj.images.join()
                    ,
                    barcode: obj.barcode
                    ,
                    customno: obj.customno
                    ,
                    category: obj.category
                    ,
                    weight: obj.weight
                    ,
                    hot: obj.hot
                    ,
                    state: obj.state
                    ,
                    content: obj.content
                    ,
                    tags: obj.tags.join()
                };
                if (new Date().getTime() - ts < 10000) {
                    return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
                }
                else {
                    ts = new Date().getTime();
                }
                $.ajax({
                    url: location.pathname + '?do=set', method: "POST", dataType: "json", contentType: "application/json", data: JSON.stringify(tmp), async: false, success: function (rlt) {
                        ts = 0;
                        iTips(rlt.message, rlt.success);
                        if (rlt.success) {
                            obj.id = rlt.data;
                            router.push(vpath);
                        }
                    }
                });
            }
        }, created() {
            _self = this;
            var obj = this.form;
            obj.id = this.getParam('id');
            function initUM(_self, content) {
                if (editor) {
                    editor.destroy();
                }
                editor = UM.getEditor('editor_goods', {
                    imagePath: "",
                    toolbar: ['undo redo bold italic underline horizontal| forecolor backcolor| fontfamily fontsize',
                        '| justifyleft justifycenter justifyright justifyjustify | image video attachment removeformat '],
                    wordCount: false,
                    elementPathEnabled: false,
                    initialFrameHeight: 500
                }); // 初始化UE
                editor.ready(function () {
                    editor.setContent(content);
                    $('#preview').html(content);
                    editor.addListener('contentChange', function () {
                        $('#preview').html(editor.getContent());
                    });
                });
            }
            if (obj.id) {
                $.getJSON(location.pathname, { 'do': 'get', id: obj.id }, function (rlt) {
                    if (rlt && rlt.id) {
                        obj.name = rlt.name;
                        obj.price = rlt.price;
                        obj.tags = rlt.tags;
                        obj.brand = rlt.brand;
                        obj.barcode = rlt.barcode;
                        obj.customno = rlt.customno;
                        obj.category = rlt.category;
                        obj.image = rlt.image;
                        obj.images = rlt.images;
                        obj.content = rlt.content;
                        obj.weight = rlt.weight;
                        obj.state = rlt.state;
                        obj.hot = rlt.hot;
                        setTimeout(function () { initUM(_self, obj.content); }, 100);
                    } else {
                        app.$message({ type: 'info', message: rlt.message });
                    }
                });
            } else {
                setTimeout(function () { initUM(_self, ''); }, 150);
            }
        }
    })
    var router = new VueRouter({
        mode: 'history', routes: [
            { path: vpath, component: appList }
            , { path: vpath + '/add', component: appForm }
            , { path: vpath + '/edit', component: appForm }
        ]
    });
    var app = new Vue({ el: '#app', router: router });
</script>