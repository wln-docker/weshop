<style>.el-upload{width:21em;height:8.4em;}</style>
<div id="app" class="wln"><router-view></router-view></div>
<template id="app-list">
    <div>
        <div class="wln-title">
            <div style="float:right">
                <el-button size="mini" type="info" :plain="true" @@click="refresh()">刷新</el-button>
                <el-button size="mini" icon="el-icon-plus" type="primary" onclick="router.push(vpath + '/add')" v-if="editor">新增分组</el-button>
            </div>
            商品分组
        </div>
        <el-table :data="rows" :empty-text="message">
            <el-table-column width="50" align="center" label="排序" property="sort"></el-table-column>
            <el-table-column width="128" align="center" label="分组名称" property="name"></el-table-column>
            <el-table-column></el-table-column>
            <el-table-column width="180" align="center" label="操作" v-if="editor">
                <template scope="scope">
                    <el-button size="mini" icon="el-icon-edit" type="warning" @@click="handleEditer(scope.row)">编辑</el-button>
                    <el-button size="mini" icon="el-icon-delete" type="danger" @@click="handleDelete(scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <el-pagination @@size-change="sizeChange" @@current-change="currentChange" layout="total, sizes, prev, pager, next, jumper" :current-page="index" :page-size="size" :total="total"></el-pagination>
    </div>
</template>
<template id="app-form">
    <div>
        <div class="wln-title">
            商品分组 <a onclick="history.back()">返回</a>
        </div>
        <el-form ref="form" v-model="form" label-width="120px">
            <el-form-item label="名称">
                <el-input v-model="form.name" placeholder="必填" style="width:320px"></el-input><span class="tips notnull"></span>
            </el-form-item>
            <el-form-item label="排序">
                <el-input v-model="form.sort" placeholder="数值" style="width:90px"></el-input><span class="tips">数值越大越靠前</span>
            </el-form-item>
            <el-form-item>
                <el-button icon="el-icon-check" type="primary" @@click="onSubmit">提交</el-button>
                <el-button icon="el-icon-close" onclick="history.back()">取消</el-button>
            </el-form-item>
        </el-form>
    </div>
</template>
<script type="text/javascript">
    var vpath = "/group";
    var appList = Vue.extend({
        template: '#app-list',
        data: function () {
            emptyPager.organs = [];
            emptyPager.editor = false;
            $.getJSON('/auth', { code: 'Weshop_Group' }, function (rlt) {
                emptyPager.editor = rlt.success;
            })
            return emptyPager
        },
        methods: {
            refresh() {
                var _self = this;
                if (new Date().getTime() - ts > 10000) {
                    ts = new Date().getTime();
                    $.getJSON(location.pathname, { 'do': 'pager', page: _self.index, size: _self.size }, function (rlt) {
                        ts = 0;
                        _self.message = rlt.message;
                        _self.total = rlt.total;
                        _self.index = rlt.index;
                        _self.rows = rlt.rows;
                    });
                }
            },
            search(event) {
                if (event.keyCode == 13) {
                    this.refresh()
                }
            },
            sizeChange(val) {
                emptyPager.size = val;
                this.refresh();
            },
            currentChange(val) {
                emptyPager.index = val;
                this.refresh();
            },
            handleEditer(row) {
                router.push(vpath + '/edit?id=' + row.id);
            },
            handleDelete(row) {
                this.$confirm('此操作将删除该记录, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    var _self = this;
                    if (new Date().getTime() - ts < 10000) {
                        return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
                    }
                    else {
                        ts = new Date().getTime();
                    }
                    $.getJSON(location.pathname, { 'do': 'del', id: row.id }, function (rlt) {
                        ts = 0;
                        _self.refresh();
                        iTips(rlt.message, rlt.success);
                    });
                }).catch(() => {
                    iTips('删除操作已取消');
                });
            }
        }, created() {
            this.refresh();
        }
    })
    var appForm = Vue.extend({
        template: '#app-form',
        data: function () {
            var obj = {
                form: {
                    id: ''
                    ,
                    name: ''
                    ,
                    sort: ''
                },
            }
            return obj;
        },
        methods: {
            onSubmit: function () {
                var obj = this.form;
                if (new Date().getTime() - ts < 10000) {
                    return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
                }
                else {
                    ts = new Date().getTime();
                }
                $.post(location.pathname + '?do=set', obj, function (rlt) {
                    ts = 0;
                    iTips(rlt.message, rlt.success);
                    if (rlt.success) {
                        obj.id = rlt.data;
                        router.push(vpath);
                    }
                });
            }
        }, created() {
            var obj = this.form;
            obj.id = this.getParam('id');
            if (obj.id) {
                $.getJSON(location.pathname, { 'do': 'get', id: obj.id }, function (rlt) {
                    if (rlt && rlt.id) {
                        obj.name = rlt.name;
                        obj.sort = rlt.sort;
                    } else {
                        app.$message({ type: 'info', message: rlt.message });
                    }
                });
            }
        }
    })
    var router = new VueRouter({
        mode: 'history', routes: [
            { path: vpath, component: appList }
            , { path: vpath + '/add', component: appForm }
            , { path: vpath + '/edit', component: appForm }
        ]
    });
    var app = new Vue({ el: '#app', router: router });
</script>